{"ast":null,"code":"'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { line as d3Line } from '@mui/x-charts-vendor/d3-shape';\nimport { useCartesianContext } from \"../context/CartesianProvider/index.js\";\nimport { LineElement } from \"./LineElement.js\";\nimport { getValueToPositionMapper } from \"../hooks/useScale.js\";\nimport getCurveFactory from \"../internals/getCurve.js\";\nimport { DEFAULT_X_AXIS_KEY } from \"../constants/index.js\";\nimport { useChartGradient } from \"../internals/components/ChartsAxesGradients/index.js\";\nimport { useLineSeries } from \"../hooks/useSeries.js\";\nimport { useSkipAnimation } from \"../context/AnimationProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = useLineSeries();\n  const axisData = useCartesianContext();\n\n  // This memo prevents odd line chart behavior when hydrating.\n  const allData = React.useMemo(() => {\n    if (seriesData === undefined) {\n      return [];\n    }\n    const {\n      series,\n      stackingGroups\n    } = seriesData;\n    const {\n      xAxis,\n      yAxis,\n      xAxisIds,\n      yAxisIds\n    } = axisData;\n    const defaultXAxisId = xAxisIds[0];\n    const defaultYAxisId = yAxisIds[0];\n    return stackingGroups.flatMap(_ref => {\n      let {\n        ids: groupIds\n      } = _ref;\n      return groupIds.flatMap(seriesId => {\n        var _xData$map;\n        const {\n          xAxisId: xAxisIdProp,\n          yAxisId: yAxisIdProp,\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          connectNulls\n        } = series[seriesId];\n        const xAxisId = xAxisIdProp !== null && xAxisIdProp !== void 0 ? xAxisIdProp : xAxisKey;\n        const yAxisId = yAxisIdProp !== null && yAxisIdProp !== void 0 ? yAxisIdProp : yAxisKey;\n        const xScale = getValueToPositionMapper(xAxis[xAxisId].scale);\n        const yScale = yAxis[yAxisId].scale;\n        const xData = xAxis[xAxisId].data;\n        const gradientUsed = yAxis[yAxisId].colorScale && [yAxisId, 'y'] || xAxis[xAxisId].colorScale && [xAxisId, 'x'] || undefined;\n        if (process.env.NODE_ENV !== 'production') {\n          if (xData === undefined) {\n            throw new Error(\"MUI X: \".concat(xAxisId === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : \"The x-axis with id \\\"\".concat(xAxisId, \"\\\"\"), \" should have data property to be able to display a line plot.\"));\n          }\n          if (xData.length < stackedData.length) {\n            throw new Error(\"MUI X: The data length of the x axis (\".concat(xData.length, \" items) is lower than the length of series (\").concat(stackedData.length, \" items).\"));\n          }\n        }\n        const linePath = d3Line().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y(d => yScale(d.y[1]));\n        const formattedData = (_xData$map = xData === null || xData === void 0 ? void 0 : xData.map((x, index) => ({\n          x,\n          y: stackedData[index]\n        }))) !== null && _xData$map !== void 0 ? _xData$map : [];\n        const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n        const d = linePath.curve(getCurveFactory(series[seriesId].curve))(d3Data) || '';\n        return _extends({}, series[seriesId], {\n          gradientUsed,\n          d,\n          seriesId\n        });\n      });\n    });\n  }, [seriesData, axisData]);\n  return allData;\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [LinePlot API](https://mui.com/x/api/charts/line-plot/)\n */\nfunction LinePlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation: inSkipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const skipAnimation = useSkipAnimation(inSkipAnimation);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(_ref2 => {\n      let {\n        d,\n        seriesId,\n        color,\n        gradientUsed\n      } = _ref2;\n      return /*#__PURE__*/_jsx(LineElement, {\n        id: seriesId,\n        d: d,\n        color: color,\n        gradientId: gradientUsed && getGradientId(...gradientUsed),\n        skipAnimation: skipAnimation,\n        slots: slots,\n        slotProps: slotProps,\n        onClick: onItemClick && (event => onItemClick(event, {\n          type: 'line',\n          seriesId\n        }))\n      }, seriesId);\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? LinePlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { LinePlot };","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","line","d3Line","useCartesianContext","LineElement","getValueToPositionMapper","getCurveFactory","DEFAULT_X_AXIS_KEY","useChartGradient","useLineSeries","useSkipAnimation","jsx","_jsx","useAggregatedData","seriesData","axisData","allData","useMemo","undefined","series","stackingGroups","xAxis","yAxis","xAxisIds","yAxisIds","defaultXAxisId","defaultYAxisId","flatMap","_ref","ids","groupIds","seriesId","_xData$map","xAxisId","xAxisIdProp","yAxisId","yAxisIdProp","xAxisKey","yAxisKey","stackedData","data","connectNulls","xScale","scale","yScale","xData","gradientUsed","colorScale","process","env","NODE_ENV","Error","concat","length","linePath","x","d","defined","_","i","y","formattedData","map","index","d3Data","filter","curve","LinePlot","props","slots","slotProps","skipAnimation","inSkipAnimation","onItemClick","other","getGradientId","completedData","children","_ref2","color","id","gradientId","onClick","event","type","propTypes","func","bool","object"],"sources":["/Users/felipemalfitani/Documents/GitHub/elevat-ed/node_modules/@mui/x-charts/LineChart/LinePlot.js"],"sourcesContent":["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"slots\", \"slotProps\", \"skipAnimation\", \"onItemClick\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { line as d3Line } from '@mui/x-charts-vendor/d3-shape';\nimport { useCartesianContext } from \"../context/CartesianProvider/index.js\";\nimport { LineElement } from \"./LineElement.js\";\nimport { getValueToPositionMapper } from \"../hooks/useScale.js\";\nimport getCurveFactory from \"../internals/getCurve.js\";\nimport { DEFAULT_X_AXIS_KEY } from \"../constants/index.js\";\nimport { useChartGradient } from \"../internals/components/ChartsAxesGradients/index.js\";\nimport { useLineSeries } from \"../hooks/useSeries.js\";\nimport { useSkipAnimation } from \"../context/AnimationProvider/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useAggregatedData = () => {\n  const seriesData = useLineSeries();\n  const axisData = useCartesianContext();\n\n  // This memo prevents odd line chart behavior when hydrating.\n  const allData = React.useMemo(() => {\n    if (seriesData === undefined) {\n      return [];\n    }\n    const {\n      series,\n      stackingGroups\n    } = seriesData;\n    const {\n      xAxis,\n      yAxis,\n      xAxisIds,\n      yAxisIds\n    } = axisData;\n    const defaultXAxisId = xAxisIds[0];\n    const defaultYAxisId = yAxisIds[0];\n    return stackingGroups.flatMap(({\n      ids: groupIds\n    }) => {\n      return groupIds.flatMap(seriesId => {\n        const {\n          xAxisId: xAxisIdProp,\n          yAxisId: yAxisIdProp,\n          xAxisKey = defaultXAxisId,\n          yAxisKey = defaultYAxisId,\n          stackedData,\n          data,\n          connectNulls\n        } = series[seriesId];\n        const xAxisId = xAxisIdProp ?? xAxisKey;\n        const yAxisId = yAxisIdProp ?? yAxisKey;\n        const xScale = getValueToPositionMapper(xAxis[xAxisId].scale);\n        const yScale = yAxis[yAxisId].scale;\n        const xData = xAxis[xAxisId].data;\n        const gradientUsed = yAxis[yAxisId].colorScale && [yAxisId, 'y'] || xAxis[xAxisId].colorScale && [xAxisId, 'x'] || undefined;\n        if (process.env.NODE_ENV !== 'production') {\n          if (xData === undefined) {\n            throw new Error(`MUI X: ${xAxisId === DEFAULT_X_AXIS_KEY ? 'The first `xAxis`' : `The x-axis with id \"${xAxisId}\"`} should have data property to be able to display a line plot.`);\n          }\n          if (xData.length < stackedData.length) {\n            throw new Error(`MUI X: The data length of the x axis (${xData.length} items) is lower than the length of series (${stackedData.length} items).`);\n          }\n        }\n        const linePath = d3Line().x(d => xScale(d.x)).defined((_, i) => connectNulls || data[i] != null).y(d => yScale(d.y[1]));\n        const formattedData = xData?.map((x, index) => ({\n          x,\n          y: stackedData[index]\n        })) ?? [];\n        const d3Data = connectNulls ? formattedData.filter((_, i) => data[i] != null) : formattedData;\n        const d = linePath.curve(getCurveFactory(series[seriesId].curve))(d3Data) || '';\n        return _extends({}, series[seriesId], {\n          gradientUsed,\n          d,\n          seriesId\n        });\n      });\n    });\n  }, [seriesData, axisData]);\n  return allData;\n};\n\n/**\n * Demos:\n *\n * - [Lines](https://mui.com/x/react-charts/lines/)\n * - [Line demonstration](https://mui.com/x/react-charts/line-demo/)\n *\n * API:\n *\n * - [LinePlot API](https://mui.com/x/api/charts/line-plot/)\n */\nfunction LinePlot(props) {\n  const {\n      slots,\n      slotProps,\n      skipAnimation: inSkipAnimation,\n      onItemClick\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const skipAnimation = useSkipAnimation(inSkipAnimation);\n  const getGradientId = useChartGradient();\n  const completedData = useAggregatedData();\n  return /*#__PURE__*/_jsx(\"g\", _extends({}, other, {\n    children: completedData.map(({\n      d,\n      seriesId,\n      color,\n      gradientUsed\n    }) => {\n      return /*#__PURE__*/_jsx(LineElement, {\n        id: seriesId,\n        d: d,\n        color: color,\n        gradientId: gradientUsed && getGradientId(...gradientUsed),\n        skipAnimation: skipAnimation,\n        slots: slots,\n        slotProps: slotProps,\n        onClick: onItemClick && (event => onItemClick(event, {\n          type: 'line',\n          seriesId\n        }))\n      }, seriesId);\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? LinePlot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback fired when a line item is clicked.\n   * @param {React.MouseEvent<SVGPathElement, MouseEvent>} event The event source of the callback.\n   * @param {LineItemIdentifier} lineItemIdentifier The line item identifier.\n   */\n  onItemClick: PropTypes.func,\n  /**\n   * If `true`, animations are skipped.\n   * @default false\n   */\n  skipAnimation: PropTypes.bool,\n  /**\n   * The props used for each component slot.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable component slots.\n   * @default {}\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { LinePlot };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}